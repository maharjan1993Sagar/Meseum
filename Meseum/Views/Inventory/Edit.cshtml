@model Meseum.ViewModel.InventoryVM

@{
    /**/

    ViewBag.Title = "Create";
}

<h4>Inventory</h4>
<form asp-action="Edit" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
   <input type="hidden" asp-for="Id" />
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label>Category</label>
                <select asp-for="CategoryId" asp-items="Model.Categories" class="form-control"></select>
              
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label>Location</label>
                <select asp-for="LocationId" asp-items="Model.Locations" class="form-control"></select>
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Name)
                <input type="text" asp-for="Name" class="form-control" />
              
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Date)

                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", id = "txtDate" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Material)

                @Html.EditorFor(model => model.Material, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Material, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.ObjectCode)

                @Html.EditorFor(model => model.ObjectCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ObjectCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.size)

                @Html.EditorFor(model => model.size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.size, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.OriginOf)

                @Html.EditorFor(model => model.OriginOf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OriginOf, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.MadeBy)

                @Html.EditorFor(model => model.MadeBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MadeBy, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.ShortDetail)

                @Html.EditorFor(model => model.ShortDetail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDetail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.LongDetail)

                @Html.EditorFor(model => model.LongDetail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LongDetail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.DetailStatus)

                <div class="checkbox">
                    @Html.EditorFor(model => model.DetailStatus)
                    @Html.ValidationMessageFor(model => model.DetailStatus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Long)

                @Html.EditorFor(model => model.Long, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Long, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Latit)

                @Html.EditorFor(model => model.Latit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Latit, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label>Thumbnail Image</label>

                <input type="file" id="file" name="File" />
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.PhotoStatus)

                <div class="checkbox">
                    @Html.EditorFor(model => model.PhotoStatus)
                    @Html.ValidationMessageFor(model => model.PhotoStatus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label>Images</label>

                <input type="file" id="files" multiple name="Files" />
            </div>
        </div>
        <div class="col-md-12">
            <div class="gallery">

            </div>
        </div>


        <div class="col-md-12">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</form>
<div>
    <a asp-action="Index">Back to list</a>
</div>

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script>
            $(function () {
                // Multiple images preview in browser
                var imagesPreview = function (input, placeToInsertImagePreview) {

                    if (input.files) {
                        var filesAmount = input.files.length;

                        for (i = 0; i < filesAmount; i++) {
                            var reader = new FileReader();

                            reader.onload = function (event) {
                                $($.parseHTML('<img height="50" width="50">')).attr('src', event.target.result).appendTo(placeToInsertImagePreview);
                            }

                            reader.readAsDataURL(input.files[i]);
                        }
                    }

                };

                $('#files').on('change', function () {
                    imagesPreview(this, 'div.gallery');
                });

                $("#txtDate").datepicker();
            });
        </script>
    }*@
